name: CI

on:
  pull_request: # Start the job on all PRs
    branches: [master, main]
    types: [synchronize, opened, reopened, ready_for_review]
  push: # Start the job on all main branch push
    branches: [master, main]

jobs:
  precommit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Pre-Commit environments
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pc-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pc-${{ hashFiles('.pre-commit-config.yaml') }}
            ${{ runner.os }}-pc-

      - name: Install dependencies
        run: |
          python -m pip install pre-commit
          pre-commit install

      - name: Run pre-commits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | sed 's/^.*\///')
          DEFAULT_BRANCH=$(curl -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY" | jq -r '.default_branch')

          git fetch
          CUR_SHA=$(git log --pretty=tformat:"%H" -n1 . | tail -n1)

          echo "Default branch is $DEFAULT_BRANCH"
          echo "Current SHA is $CUR_SHA"

          if [[ $GITHUB_REF == "refs/heads/$DEFAULT_BRANCH" ]]; then
            pre-commit run --all
          else
            pre-commit run --from-ref origin/$DEFAULT_BRANCH --to-ref $CUR_SHA
          fi

  test:
    name: Run test suite
    needs: precommit
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: docker-compose.yaml
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build docker images
      run: docker compose up --build semantic-test-runner
